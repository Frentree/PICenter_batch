<?xml version="1.0" encoding="EUC-KR"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"  "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="query">

	<select id="getEndScheduleTarget" resultClass="com.skyun.app.util.database.ibatis.vo.CompletTargetVo">
		SELECT T.NAME,
			T.AP_NO,
			T.TARGET_ID,
			DATE_FORMAT(FROM_UNIXTIME(SL.UPDATED), '%Y-%m-%d 00:00:00') AS REGDATE
		FROM pi_targets T
		  LEFT OUTER JOIN PI_SCHEDULES S ON T.AP_NO = S.AP_NO AND T.TARGET_ID = S.SCHEDULE_TARGET_ID
		  LEFT OUTER JOIN pi_scheduled_location SL ON SL.AP_NO = S.AP_NO AND S.SCHEDULE_ID = SL.SCH_ID
		WHERE 1=1
		  AND S.SCHEDULE_STATUS IN ('completed', 'stopped', 'interrupted')
		  AND DATE_FORMAT(FROM_UNIXTIME(SL.UPDATED), '%Y-%m-%d %H:00') >= DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY), '%Y-%m-%d %H:00')
		GROUP BY T.TARGET_ID, T.AP_NO
	</select>
	
	<select id="getPersonCount" parameterClass="com.skyun.app.util.database.ibatis.vo.CompletTargetVo" resultClass="com.skyun.app.util.database.ibatis.vo.PersonalVo">
		<!-- SELECT 
			TARGET_ID, 
			(SELECT NAME FROM PI_TARGETS WHERE TARGET_ID = DATA.TARGET_ID LIMIT 1) NAME, 
			REGDATE, 
			AP_NO, 
			COUNT(PATH_CNT) AS PATH_CNT, 
			SUM(DRIVER) AS DRIVER, 
			SUM(FOREIGNER) AS FOREIGNER, 
			SUM(PASSPORT) AS PASSPORT, 
			SUM(RRN) AS RRN, 
			SUM(ACCOUNT_NUM) AS ACCOUNT_NUM, 
			SUM(CARD_NUM) AS CARD_NUM, 
			SUM(PHONE) AS PHONE, 
			SUM(PHONE_NUM) AS PHONE_NUM, 
			SUM(MOBILE_PHONE) AS MOBILE_PHONE, 
			SUM(EMAIL) AS EMAIL, 
			SUM(TOTALS) AS TOTALS,
			SUM(DRIVER+FOREIGNER+PASSPORT+RRN+ACCOUNT_NUM+CARD_NUM+PHONE+PHONE_NUM+MOBILE_PHONE+EMAIL) AS TOTAL
		FROM (SELECT
		A.TARGET_ID as TARGET_ID,
		A.AP_NO,
		COUNT(A.PATH) AS PATH_CNT,
		MAX(DATE_FORMAT(A.REGDATE, '%Y.%m/%d' )) AS REGDATE,
		SUM(CASE WHEN INSTR(UPPER(B.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0 THEN B.MATCH_COUNT ELSE 0 END) AS driver,
		SUM(CASE WHEN INSTR(UPPER(B.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0 THEN B.MATCH_COUNT ELSE 0 END) AS foreigner,
		SUM(CASE WHEN INSTR(UPPER(B.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0 THEN B.MATCH_COUNT ELSE 0 END) AS passport,
		SUM(CASE WHEN INSTR(UPPER(B.DATA_TYPE), 'SOUTH KOREAN RRN') > 0 THEN B.MATCH_COUNT ELSE 0 END) AS rrn,
		SUM(CASE WHEN INSTR(UPPER(B.DATA_TYPE), 'ACCOUNT NUMBER') > 0 THEN B.MATCH_COUNT ELSE 0 END) AS account_num,
		SUM(CASE WHEN INSTR(UPPER(B.DATA_TYPE), 'VISA' ) > 0 THEN B.MATCH_COUNT ELSE 0 END) AS card_num,
		SUM(CASE WHEN INSTR(UPPER(B.DATA_TYPE), 'SOUTH KOREAN PHONE NUMBER') > 0 THEN B.MATCH_COUNT ELSE 0 END) AS PHONE,
		SUM(CASE WHEN INSTR(UPPER(B.DATA_TYPE), 'SOUTH KOREAN LOCAL PHONE NUMBER') > 0 THEN B.MATCH_COUNT ELSE 0 END) AS PHONE_NUM,
		SUM(CASE WHEN INSTR(UPPER(B.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0 THEN B.MATCH_COUNT ELSE 0 END) AS MOBILE_PHONE,
		SUM(CASE WHEN INSTR(UPPER(B.DATA_TYPE), 'EMAIL') > 0 THEN B.MATCH_COUNT ELSE 0 END) AS EMAIL,
		SUM(B.MATCH_COUNT) AS TOTALS
		FROM PI_FIND A, pi_summary B
		WHERE B.OBJECT_ID = A.HASH_ID
		AND B.TARGET_ID = A.TARGET_ID
		AND A.AP_NO = B.AP_NO
		AND A.AP_NO = #ap_no#
		AND A.TARGET_ID = #target_id#
		AND date(A.REGDATE) >= CURDATE()- INTERVAL 1 DAY
		AND A.DELDATE IS NULL
		GROUP BY A.HASH_ID, A.TARGET_ID, A.AP_NO) DATA -->
		
		<!-- 230427 pi_topcomp 에 임계치 적용된 검출 건수 및 검출 파일 수 -->
		SELECT 
			TARGET_ID, 
			(SELECT NAME FROM PI_TARGETS WHERE TARGET_ID = DATA.TARGET_ID LIMIT 1) AS NAME, 
			REGDATE, 
			IFNULL(AP_NO, 0) AS AP_NO, 
			IFNULL(COUNT(DATA.PATH), 0)AS PATH_CNT, 
			IFNULL(SUM(DRIVER), 0) AS DRIVER, 
			IFNULL(SUM(FOREIGNER), 0) AS FOREIGNER, 
			IFNULL(SUM(PASSPORT), 0) AS PASSPORT, 
			IFNULL(SUM(RRN), 0) AS RRN, 
			IFNULL(SUM(ACCOUNT_NUM), 0) AS ACCOUNT_NUM, 
			IFNULL(SUM(CARD_NUM), 0) AS CARD_NUM, 
			IFNULL(SUM(MOBILE_PHONE), 0) AS MOBILE_PHONE, 
			IFNULL(SUM(EMAIL), 0) AS EMAIL, 
			IFNULL(SUM(DRIVER+FOREIGNER+PASSPORT+RRN+ACCOUNT_NUM+CARD_NUM+MOBILE_PHONE+EMAIL), 0) AS TOTAL
		FROM (SELECT
		T.TARGET_ID as TARGET_ID,
		T.AP_NO,
		F.PATH,
		MAX(DATE_FORMAT(F.REGDATE, '%Y.%m/%d' )) AS REGDATE,
		IF(SP.ENABLE = 1,
         CASE WHEN 
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.RRN_CNT 
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0 THEN S.MATCH_COUNT ELSE 0 END))  AS RRN, 
	    IF(SP.ENABLE = 1,
         CASE WHEN
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.FOREIGNER_CNT 
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END))  AS FOREIGNER, 
	    IF(SP.ENABLE = 1,
         CASE WHEN
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.PASSPORT_CNT 
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0 THEN S.MATCH_COUNT ELSE 0 END))  AS PASSPORT, 
        IF(SP.ENABLE = 1,
		 CASE WHEN
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.DRIVER_CNT
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END))  AS DRIVER, 
        IF(SP.ENABLE = 1,
 		 CASE WHEN
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.ACCOUNT_CNT 
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END))  AS ACCOUNT_NUM, 
	 	 IF(SP.ENABLE = 1,
		  CASE WHEN 
			SUM(CASE WHEN UPPER(S.DATA_TYPE) IN ('VISA', 'MAESTRO', 'PRIVATE LABEL CARD', 'DINERS CLUB', 'JCB', 'LASER', 'MASTERCARD', 'CHINA UNION PAY', 'DISCOVER', 'TROY', 'AMERICAN EXPRESS')
			THEN S.MATCH_COUNT ELSE 0 END) > DU.CARD_CNT 
			THEN SUM(CASE WHEN UPPER(S.DATA_TYPE) IN ('VISA', 'MAESTRO', 'PRIVATE LABEL CARD', 'DINERS CLUB', 'JCB', 'LASER', 'MASTERCARD', 'CHINA UNION PAY', 'DISCOVER', 'TROY', 'AMERICAN EXPRESS')
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END,
			(SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'VISA') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MAESTRO') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'PRIVATE LABEL CARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DINERS CLUB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'JCB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
         	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'LASER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MASTERCARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'CHINA UNION PAY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DISCOVER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'TROY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'AMERICAN EXPRESS') > 0 THEN S.MATCH_COUNT ELSE 0 END) ))  AS CARD_NUM, 
         IF(SP.ENABLE = 1,
		  CASE WHEN
		   SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'EMAIL') > 0
		   THEN S.MATCH_COUNT ELSE 0 END) > DU.EMAIL_CNT
		   THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'EMAIL') > 0
		   THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'EMAIL') > 0 THEN S.MATCH_COUNT ELSE 0 END))  AS EMAIL, 
	 	  IF(SP.ENABLE = 1,
	 	  CASE WHEN
		   SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0
		   THEN S.MATCH_COUNT ELSE 0 END) > DU.MOBILE_PHONE_CNT
		   THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0
		   THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END))  AS MOBILE_PHONE,

	  	 IF(SP.ENABLE = 1,
         (
         CASE WHEN 
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.RRN_CNT 
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END +
         CASE WHEN
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.FOREIGNER_CNT 
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END +
         CASE WHEN
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.PASSPORT_CNT 
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END +
         CASE WHEN
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.DRIVER_CNT
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END +
         CASE WHEN
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.ACCOUNT_CNT 
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END +
	  	 CASE WHEN 
			SUM(CASE WHEN UPPER(S.DATA_TYPE) IN ('VISA', 'MAESTRO', 'PRIVATE LABEL CARD', 'DINERS CLUB', 'JCB', 'LASER', 'MASTERCARD', 'CHINA UNION PAY', 'DISCOVER', 'TROY', 'AMERICAN EXPRESS')
			THEN S.MATCH_COUNT ELSE 0 END) > DU.CARD_CNT 
			THEN SUM(CASE WHEN UPPER(S.DATA_TYPE) IN ('VISA', 'MAESTRO', 'PRIVATE LABEL CARD', 'DINERS CLUB', 'JCB', 'LASER', 'MASTERCARD', 'CHINA UNION PAY', 'DISCOVER', 'TROY', 'AMERICAN EXPRESS')
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END +
         CASE WHEN
		   SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'EMAIL') > 0
		   THEN S.MATCH_COUNT ELSE 0 END) > DU.EMAIL_CNT
		   THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'EMAIL') > 0
		   THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END +
	     CASE WHEN
		   SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0
		   THEN S.MATCH_COUNT ELSE 0 END) > DU.MOBILE_PHONE_CNT
		   THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0
		   THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END
         ),
	    ( SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END) + 
          SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END) + 
          SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0 THEN S.MATCH_COUNT ELSE 0 END) + 
          SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END) + 
          (SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'VISA') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MAESTRO') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'PRIVATE LABEL CARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DINERS CLUB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'JCB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'LASER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MASTERCARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'CHINA UNION PAY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DISCOVER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'TROY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'AMERICAN EXPRESS') > 0 THEN S.MATCH_COUNT ELSE 0 END) + 
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'EMAIL') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END) ) )	
		 ) AS TOTAL,
		 MAX_STS.POLICY_ID,
		 IFNULL(SP.ENABLE, 2) AS ENABLE,
		 IFNULL(SP.POLICY_NAME,'') AS POLICY_NM,
		 SD.SCHEDULE_DATATYPE_PROFILES AS DATATYPE_ID,
		 DU.rrn				AS RRN_CHK,
		 DU.rrn_cnt			AS RRN_CNT,
		 DU.rrn_dup			AS RRN_DUP,
		 DU.foreigner			AS FOREIGNER_CHK,
		 DU.foreigner_cnt		AS FOREIGNER_CNT,
		 DU.foreigner_dup		AS FOREIGNER_DUP,
		 DU.driver				AS DRIVER_CHK,
		 DU.driver_cnt			AS DRIVER_CNT,
		 DU.driver_dup			AS DRIVER_DUP,
		 DU.passport			AS PASSPORT_CHK,
		 DU.passport_cnt		AS PASSPORT_CNT,
		 DU.passport_dup		AS PASSPORT_DUP,
		 DU.account			AS ACCOUNT_CHK,
		 DU.account_cnt		AS ACCOUNT_CNT,
		 DU.account_dup		AS ACCOUNT_DUP,
		 DU.card				AS CARD_CHK,
		 DU.card_cnt			AS CARD_CNT,
		 DU.card_dup			AS CARD_DUP,
		 DU.mobile_phone		AS MOBILE_PHONE_CHK,
		 DU.mobile_phone_cnt	AS MOBILE_PHONE_CNT,
		 DU.mobile_phone_dup	AS MOBILE_PHONE_DUP,
		 DU.email				AS EMAIL_CHK,
		 DU.email_cnt			AS EMAIL_CNT,
		 DU.email_dup			AS EMAIL_DUP,
		 DU.recent AS RECENT
		 FROM pi_targets T
	 			LEFT OUTER JOIN 
 					(SELECT ST.TARGET_ID, ST.AP_NO, ST.LOCATION_ID, ST.RECON_SCHEDULE_ID,ST.REGDATE, ST.POLICY_ID, ST.CONFIRM FROM pi_schedule_targets ST,
					    (SELECT STS.TARGET_ID, STS.AP_NO ,MAX(STS.REGDATE) AS REGDATE FROM pi_schedule_targets STS GROUP BY STS.TARGET_ID, STS.AP_NO) STS
					    WHERE STS.TARGET_ID = ST.TARGET_ID
					      AND STS.AP_NO = ST.AP_NO
					      AND STS.REGDATE = ST.REGDATE
					) AS MAX_STS ON T.TARGET_ID = MAX_STS.TARGET_ID AND T.AP_NO = MAX_STS.AP_NO
				LEFT OUTER JOIN pi_scan_policy SP ON MAX_STS.POLICY_ID = SP.IDX 
				LEFT OUTER JOIN pi_schedules SD ON MAX_STS.AP_NO = SD.AP_NO AND MAX_STS.RECON_SCHEDULE_ID = SD.SCHEDULE_ID
				LEFT OUTER JOIN pi_datatypes_user DU ON SP.STD_ID = DU.STD_ID AND T.AP_NO = DU.AP_NO
				, pi_Summary S, pi_find F
		 WHERE 1 = 1
		  AND F.TARGET_ID = #target_id#
		  AND F.AP_NO = #ap_no#
		  AND T.TARGET_ID = F.TARGET_ID
		  AND F.HASH_ID = S.OBJECT_ID
		  AND F.TARGET_ID = S.TARGET_ID
		  AND T.AP_NO = S.AP_NO
		  AND T.AP_NO = F.AP_NO
		  AND F.DELDATE IS NULL
		 GROUP BY F.HASH_ID, F.TARGET_ID, F.AP_NO) DATA
		 WHERE 1=1
		 AND ((DATA.RRN > IFNULL(DATA.RRN_CNT, 0) AND IFNULL(DATA.RRN_CHK, 1) > 0)
		  OR (DATA.FOREIGNER > IFNULL(DATA.FOREIGNER_CNT, 0) AND IFNULL(DATA.FOREIGNER_CHK, 1) > 0)
		  OR (DATA.PASSPORT > IFNULL(DATA.PASSPORT_CNT, 0) AND IFNULL(DATA.PASSPORT_CHK, 1) > 0)
		  OR (DATA.DRIVER > IFNULL(DATA.DRIVER_CNT, 0) AND IFNULL(DATA.DRIVER_CHK, 1) > 0)
		  OR (DATA.ACCOUNT_NUM > IFNULL(DATA.ACCOUNT_CNT, 0) AND IFNULL(DATA.ACCOUNT_CHK, 1) > 0)
		  OR (DATA.CARD_NUM > IFNULL(DATA.CARD_CNT, 0) AND IFNULL(DATA.CARD_CHK, 1) > 0)
		  OR (DATA.EMAIL > IFNULL(DATA.EMAIL_CNT, 0) AND IFNULL(DATA.EMAIL_CHK, 1) > 0)
		  OR (DATA.MOBILE_PHONE > IFNULL(DATA.MOBILE_PHONE_CNT, 0) AND IFNULL(DATA.MOBILE_PHONE_CHK, 1) > 0))
	</select>

	<select id="getPreCount" resultClass="com.skyun.app.util.database.ibatis.vo.pi_topcompVo">
		SELECT
		target_id,
		ap_no,
		path_cnt,
		SUM(rrn) AS rrn,
		SUM(foreigner) AS foreigner,
		SUM(driver) AS driver,
		SUM(passport) AS passport,
		SUM(account_num) AS account_num,
		SUM(card_num) AS card_num,
		SUM(phone) AS phone,
		SUM(phone_num) AS phone_num,
		SUM(mobile_phone) AS mobile_phone,
		SUM(email) AS email,
		SUM(total) AS total
		FROM pi_topcomp
		WHERE date(regdate)=CURDATE()- INTERVAL 1 DAY
		  AND TARGET_ID = #target_id#
		  AND AP_NO = #ap_no#
		GROUP BY target_id, ap_no
	</select>

	<select id="getAgentDisconnectList" resultClass="com.skyun.app.util.database.ibatis.vo.EmailItemVo">
		SELECT
		agent_name,
		agent_connected_ip
		FROM pi_agents
		where agent_connected=0
	</select>

	<select id="getDelDataList" resultClass="com.skyun.app.util.database.ibatis.vo.pifindVo">
		SELECT hash_id,group_id,target_id FROM pi_find
		WHERE DATE_FORMAT(regdate, '%Y.%m.%d' ) != DATE_FORMAT(NOW(), '%Y.%m.%d' )
		AND deldate IS null

	</select>

	<!-- 승인 대기 -->
	<select id="getEmailMaster1" resultClass="com.skyun.app.util.database.ibatis.vo.eMasterVo">
		SELECT DPCG.OK_USER_NO               AS receiver,
			   OK_USR.USER_NAME              AS receiver_name,
		       ifnull(DPCG.USER_NO, ' ')     AS sender,
		       ifnull(USR.USER_NAME, ' ')    AS sender_name
		FROM PI_DATA_PROCESSING_CHARGE_GROUP AS DPCG,
		    PI_USER AS USR,
		   PI_USER AS OK_USR
		WHERE DPCG.APPROVAL_STATUS = 'W'
		AND DPCG.USER_NO = USR.USER_NO
		AND DPCG.OK_USER_NO = OK_USR.USER_NO
		AND DPCG.REGDATE > DATE_ADD(NOW(), INTERVAL -24 HOUR)
		GROUP BY DPCG.OK_USER_NO,
		DPCG.USER_NO
		ORDER BY DPCG.OK_USER_NO,
		DPCG.USER_NO
	</select>

	<!-- 승인 반려 -->
	<select id="getEmailMaster2" resultClass="com.skyun.app.util.database.ibatis.vo.eMasterVo">
			SELECT DPCG.OK_USER_NO    AS sender,
		          OK_USR.USER_NAME   AS sender_name,
		          ifnull(DPCG.USER_NO,' ')       AS receiver,
		          ifnull(USR.USER_NAME,' ')     AS receiver_name
		     FROM PI_DATA_PROCESSING_CHARGE_GROUP AS DPCG,
		          PI_USER                         AS USR,
		          PI_USER                         AS OK_USR
		    WHERE DPCG.APPROVAL_STATUS = 'D'
		      AND DPCG.USER_NO         = USR.USER_NO
		      AND DPCG.OK_USER_NO      = OK_USR.USER_NO
		      AND DPCG.OKDATE > DATE_ADD(NOW(), INTERVAL -24 HOUR)
		   GROUP BY DPCG.OK_USER_NO,
		            DPCG.USER_NO
		   ORDER BY DPCG.OK_USER_NO,
		            DPCG.USER_NO
	</select>


	<!-- 승인 완료 -->
	<select id="getEmailMaster3" resultClass="com.skyun.app.util.database.ibatis.vo.eMasterVo">
		SELECT DPCG.OK_USER_NO AS sender,
			OK_USR.USER_NAME AS sender_name,
			ifnull(DPCG.USER_NO,' ') AS receiver,
			ifnull(USR.USER_NAME, ' ') AS receiver_name
		FROM PI_DATA_PROCESSING_CHARGE_GROUP AS DPCG,
			PI_USER AS USR,
			PI_USER AS OK_USR
		WHERE DPCG.APPROVAL_STATUS = 'E'
		AND DPCG.USER_NO = USR.USER_NO
		AND DPCG.OK_USER_NO = OK_USR.USER_NO
		AND DPCG.OKDATE > DATE_ADD(NOW(), INTERVAL -24 HOUR)
		GROUP BY DPCG.OK_USER_NO,
		DPCG.USER_NO
		ORDER BY DPCG.OK_USER_NO,
		DPCG.USER_NO
	</select>

	<!-- 담당자 변경요청 -->
	<select id="getEmailMaster4" resultClass="com.skyun.app.util.database.ibatis.vo.eMasterVo">
		SELECT CU.REG_USER_NO AS receiver,
		USR.USER_NAME AS receiver_name,
		ifnull(CU.OK_USER_NO,' ') AS sender,
		ifnull(OK_USR.USER_NAME, ' ') AS sender_name
		FROM PI_CHARGE_UPDATE AS CU,
		PI_TARGETS AS T,
		PI_USER AS USR,
		PI_USER AS OK_USR
		WHERE T.TARGET_ID = CU.TARGET_ID
		AND (CU.APPROVAL_STATUS = 'W' OR CU.APPROVAL_STATUS IS NULL OR CU.APPROVAL_STATUS = '')
		AND CU.REG_USER_NO = USR.USER_NO
		AND CU.OK_USER_NO = OK_USR.USER_NO
		GROUP BY CU.REG_USER_NO,
		CU.OK_USER_NO
	</select>

	<!-- 담당자 변경반려 -->
	<select id="getEmailMaster5" resultClass="com.skyun.app.util.database.ibatis.vo.eMasterVo">

		SELECT ifnull(CU.OK_USER_NO, ' ') AS sender,
		ifnull(OK_USR.USER_NAME, ' ') AS sender_name,
		CU.REG_USER_NO AS receiver,
		USR.USER_NAME AS receiver_name
		FROM PI_CHARGE_UPDATE AS CU,
		PI_TARGETS AS T,
		PI_USER AS USR,
		PI_USER AS OK_USR
		WHERE T.TARGET_ID = CU.TARGET_ID
		AND CU.APPROVAL_STATUS = 'D'
		AND CU.OKDATE > DATE_ADD(NOW(), INTERVAL -24 HOUR)
		AND CU.REG_USER_NO = USR.USER_NO
		AND CU.OK_USER_NO = OK_USR.USER_NO
		GROUP BY CU.OK_USER_NO,
		CU.REG_USER_NO

	</select>


	<!-- 담당자 변경완료 -->
	<select id="getEmailMaster6" resultClass="com.skyun.app.util.database.ibatis.vo.eMasterVo">
		SELECT ifnull(CU.OK_USER_NO, ' ') AS sender,
		ifnull(OK_USR.USER_NAME, ' ') AS sender_name,
		CU.REG_USER_NO AS receiver,
		USR.USER_NAME AS receiver_name
		FROM PI_CHARGE_UPDATE AS CU,
		PI_TARGETS AS T,
		PI_USER AS USR,
		PI_USER AS OK_USR
		WHERE T.TARGET_ID = CU.TARGET_ID
		AND CU.APPROVAL_STATUS = 'E'
		AND CU.OKDATE > DATE_ADD(NOW(), INTERVAL -24 HOUR)
		AND CU.REG_USER_NO = USR.USER_NO
		AND CU.OK_USER_NO = OK_USR.USER_NO
		GROUP BY CU.OK_USER_NO, CU.REG_USER_NO

	</select>

	<select id="getEmailMaster7" resultClass="com.skyun.app.util.database.ibatis.vo.eMasterVo">

		SELECT USER_NO AS sender,
		USER_NAME AS sender_name,
		'' AS receiver,
		USER_NAME AS receiver_name
		FROM PI_USER

	</select>

	<select id="getEmailDetail1" parameterClass="com.skyun.app.util.database.ibatis.vo.eMasterVo" resultClass="com.skyun.app.util.database.ibatis.vo.eDetail1Vo">
			 SELECT DPCG.data_processing_charge_name AS PATH,
		      USR.USER_NAME                    AS REQ_USER_NAME,
		      OK_USR.USER_NAME                 AS OK_USER_NAME,
		      DATE_FORMAT(DPCG.REGDATE, '%Y-%m-%d %H:%i:%s') AS REGDATE,
		      ifnull(DATE_FORMAT(DPCG.OKDATE, '%Y-%m-%d %H:%i:%s'), ' ') AS OKDATE,
		      '승인 대기'                         AS STATUS_NAME,
		      ifnull(DPCG.REASON  ,' ')        AS REASON
		 FROM PI_DATA_PROCESSING_CHARGE_GROUP AS DPCG,
		      PI_USER AS USR,
		      PI_USER AS OK_USR
		WHERE DPCG.APPROVAL_STATUS = 'W'
		  AND DPCG.OK_USER_NO      = #receiver#
		AND DPCG.USER_NO         = #sender#
		AND DPCG.REGDATE > DATE_ADD(NOW(), INTERVAL -24 HOUR)
		  AND DPCG.USER_NO         = USR.USER_NO
		  AND DPCG.OK_USER_NO      = OK_USR.USER_NO
		ORDER BY DPCG.REGDATE DESC,
		        DPCG.OKDATE DESC
	</select>

	<select id="getEmailDetail2" parameterClass="com.skyun.app.util.database.ibatis.vo.eMasterVo" resultClass="com.skyun.app.util.database.ibatis.vo.eDetail2Vo">

		SELECT DPCG.data_processing_charge_name AS PATH,
		USR.USER_NAME AS REQ_USER_NAME,
		OK_USR.USER_NAME AS OK_USER_NAME,
		DATE_FORMAT(DPCG.REGDATE, '%Y-%m-%d %H:%i:%s') AS REGDATE,
		ifnull(DATE_FORMAT(DPCG.OKDATE, '%Y-%m-%d %H:%i:%s'), ' ') AS OKDATE,
		'승인 반려' AS STATUS_NAME,
		ifnull(DPCG.REASON ,' ') AS REASON
		FROM PI_DATA_PROCESSING_CHARGE_GROUP AS DPCG,
		PI_USER AS USR,
		PI_USER AS OK_USR
		WHERE DPCG.APPROVAL_STATUS = 'D'
		AND DPCG.OK_USER_NO = #sender#
		AND DPCG.USER_NO = #receiver#
		AND DPCG.OKDATE > DATE_ADD(NOW(), INTERVAL -24 HOUR)
		AND DPCG.USER_NO = USR.USER_NO
		AND DPCG.OK_USER_NO = OK_USR.USER_NO
		ORDER BY DPCG.REGDATE DESC,
		DPCG.OKDATE DESC;

	</select>

	<select id="getEmailDetail3" parameterClass="com.skyun.app.util.database.ibatis.vo.eMasterVo" resultClass="com.skyun.app.util.database.ibatis.vo.eDetail3Vo">
		SELECT DPCG.data_processing_charge_name AS PATH,
		USR.USER_NAME AS REQ_USER_NAME,
		OK_USR.USER_NAME AS OK_USER_NAME,
		DATE_FORMAT(DPCG.REGDATE, '%Y-%m-%d %H:%i:%s') AS REGDATE,
		ifnull(DATE_FORMAT(DPCG.OKDATE, '%Y-%m-%d %H:%i:%s'), ' ') AS OKDATE,
		'승인 완료' AS STATUS_NAME,
		ifnull(DPCG.REASON ,' ') AS REASON
		FROM PI_DATA_PROCESSING_CHARGE_GROUP AS DPCG,
		PI_USER AS USR,
		PI_USER AS OK_USR
		WHERE DPCG.APPROVAL_STATUS = 'E'
		AND DPCG.OK_USER_NO = #sender#
		AND DPCG.USER_NO = #receiver#
		AND DPCG.OKDATE > DATE_ADD(NOW(), INTERVAL -24 HOUR)
		AND DPCG.USER_NO = USR.USER_NO
		AND DPCG.OK_USER_NO = OK_USR.USER_NO
		ORDER BY DPCG.REGDATE DESC, DPCG.OKDATE DESC
	</select>
	<select id="getEmailDetail4" parameterClass="com.skyun.app.util.database.ibatis.vo.eMasterVo" resultClass="com.skyun.app.util.database.ibatis.vo.eDetail4Vo">
		SELECT T.NAME AS HOST,
		CU.PATH AS PATH,
		(SELECT Z.USER_NAME FROM PI_USER Z WHERE Z.USER_NO = CU.REG_USER_NO) AS REG_USER_NAME,
		(SELECT Z.USER_NAME FROM PI_USER Z WHERE Z.USER_NO = CU.OK_USER_NO) AS OK_USER_NAME,
		DATE_FORMAT(CU.REGDATE, '%Y-%m-%d %H:%i:%s') AS REGDATE,
		ifnull(DATE_FORMAT(CU.OKDATE, '%Y-%m-%d %H:%i:%s'),' ') AS OKDATE,
		'승인대기' AS STATUS_NAME,
		ifnull(CU.REASON ,' ') AS REASON,
		ifnull(CU.REG_USER_NO ,' ') AS REG_USER_NO,
		ifnull(CU.OK_USER_NO ,' ') AS OK_USER_NO
		FROM PI_CHARGE_UPDATE AS CU,
		PI_TARGETS AS T
		WHERE T.TARGET_ID = CU.TARGET_ID
		AND (CU.APPROVAL_STATUS = 'W' OR CU.APPROVAL_STATUS IS NULL OR CU.APPROVAL_STATUS = '')
		AND CU.REG_USER_NO = #sender#
		AND CU.OK_USER_NO = #receiver#
		ORDER BY CU.REGDATE DESC, CU.OKDATE DESC
	</select>


	<select id="getEmailDetail5" parameterClass="com.skyun.app.util.database.ibatis.vo.eMasterVo" resultClass="com.skyun.app.util.database.ibatis.vo.eDetail5Vo">
		SELECT T.NAME AS HOST,
		CU.PATH AS PATH,
		(SELECT Z.USER_NAME FROM PI_USER Z WHERE Z.USER_NO = CU.REG_USER_NO) AS REG_USER_NAME,
		(SELECT Z.USER_NAME FROM PI_USER Z WHERE Z.USER_NO = CU.OK_USER_NO) AS OK_USER_NAME,
		DATE_FORMAT(CU.REGDATE, '%Y-%m-%d %H:%i:%s') AS REGDATE,
		ifnull(DATE_FORMAT(CU.OKDATE, '%Y-%m-%d %H:%i:%s'),' ') AS OKDATE,
		'반려' AS STATUS_NAME,
		ifnull( CU.REASON ,' ') AS REASON,
		ifnull( CU.REG_USER_NO ,' ') AS REG_USER_NO,
		ifnull(CU.OK_USER_NO ,' ') AS OK_USER_NO
		FROM PI_CHARGE_UPDATE AS CU,
		PI_TARGETS AS T
		WHERE T.TARGET_ID = CU.TARGET_ID
		AND CU.APPROVAL_STATUS = 'D'
		AND CU.OKDATE > DATE_ADD(NOW(), INTERVAL -24 HOUR)
		AND CU.OK_USER_NO = #sender#
		AND CU.REG_USER_NO = #receiver#
		ORDER BY CU.REGDATE DESC, CU.OKDATE DESC
	</select>

	<select id="getEmailDetail6" parameterClass="com.skyun.app.util.database.ibatis.vo.eMasterVo" resultClass="com.skyun.app.util.database.ibatis.vo.eDetail6Vo">
		SELECT T.NAME AS HOST,
		CU.PATH AS PATH,
		(SELECT Z.USER_NAME FROM PI_USER Z WHERE Z.USER_NO = CU.REG_USER_NO) AS REG_USER_NAME,
		(SELECT Z.USER_NAME FROM PI_USER Z WHERE Z.USER_NO = CU.OK_USER_NO) AS OK_USER_NAME,
		DATE_FORMAT(CU.REGDATE, '%Y-%m-%d %H:%i:%s') AS REGDATE,
		ifnull(DATE_FORMAT(CU.OKDATE, '%Y-%m-%d %H:%i:%s'), ' ') AS OKDATE,
		'승인완료' AS STATUS_NAME,
		ifnull( CU.REASON ,' ') AS REASON,
		ifnull( CU.REG_USER_NO ,' ') AS REG_USER_NO,
		ifnull(CU.OK_USER_NO ,' ') AS OK_USER_NO
		FROM PI_CHARGE_UPDATE AS CU,
		PI_TARGETS AS T
		WHERE T.TARGET_ID = CU.TARGET_ID
		AND CU.APPROVAL_STATUS = 'E'
		AND CU.OKDATE > DATE_ADD(NOW(), INTERVAL -24 HOUR)
		AND CU.OK_USER_NO = #sender#
		AND CU.REG_USER_NO = #receiver#
		ORDER BY CU.REGDATE DESC, CU.OKDATE DESC
	</select>

	<select id="getEmailDetail7" parameterClass="com.skyun.app.util.database.ibatis.vo.eMasterVo" resultClass="com.skyun.app.util.database.ibatis.vo.eDetail7Vo">
		SELECT 
			F.PATH      AS SHORTNAME,
			T.NAME      AS HOST,
			F.OWNER     AS OWNER,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0 THEN S.MATCH_COUNT ELSE 0 END)						AS TYPE1,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)			AS TYPE2,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0 THEN S.MATCH_COUNT ELSE 0 END)					AS TYPE3,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE4,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)						AS TYPE5,
			(SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'VISA') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MAESTRO') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'PRIVATE LABEL CARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DINERS CLUB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'JCB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'LASER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MASTERCARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'AMERICAN EXPRESS') > 0 THEN S.MATCH_COUNT ELSE 0 END) )					AS TYPE6,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PHONE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END) 			AS TYPE7,
			(SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END) + 
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END) + 
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0 THEN S.MATCH_COUNT ELSE 0 END) + 
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END) + 
			(SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'VISA') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MAESTRO') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'PRIVATE LABEL CARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DINERS CLUB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'JCB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'LASER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MASTERCARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'AMERICAN EXPRESS') > 0 THEN S.MATCH_COUNT ELSE 0 END) + 
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PHONE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)) )					AS TYPE,
			(CASE	
				WHEN PRC_FLAG.PROCESSING_FLAG IS NULL THEN ''
		           ELSE CONCAT((CASE 	WHEN PRC.APPROVAL_STATUS = 'W' THEN '처리 등록'
								     	WHEN PRC.APPROVAL_STATUS = 'E' THEN '처리 완료' 
								     	WHEN PRC.APPROVAL_STATUS = 'D' THEN '처리 반려' 
								        ELSE '처리 대기' END 
								), '_', PRC_FLAG.PROCESSING_FLAG_NAME) 
			END) AS APPROVAL_STATUS_PRINT_NAME
		FROM pi_targets T, pi_Summary S, pi_find F
		   LEFT OUTER JOIN PI_DATA_PROCESSING PRC           ON PRC.TARGET_ID = F.TARGET_ID AND F.HASH_ID = PRC.HASH_ID AND F.GROUP_ID = PRC.GROUP_ID
		   LEFT OUTER JOIN PI_DATA_PROCESSING_FLAG PRC_FLAG ON PRC.PROCESSING_FLAG = PRC_FLAG.PROCESSING_FLAG
		WHERE 1 = 1
			AND T.TARGET_ID = F.TARGET_ID
			AND F.HASH_ID = S.OBJECT_ID
			AND F.TARGET_ID = S.TARGET_ID
			AND F.OWNER = #sender#
			AND F.REGDATE > DATE_ADD(NOW(), INTERVAL -30 DAY)
			AND (CASE WHEN IFNULL(PRC_FLAG.PROCESSING_FLAG,999) = 5 AND IFNULL(PRC.APPROVAL_STATUS,'D') = 'E' THEN 'X' ELSE 'O' END) = 'O'
		GROUP BY F.TARGET_ID, F.HASH_ID
		HAVING TYPE != 0
		ORDER BY F.TARGET_ID, F.PATH
		
	</select>


</sqlMap>
