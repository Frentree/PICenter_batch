<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"  "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="query">
	<!-- 결재 완료 -->
	<select id="getEmailMaster1" resultClass="com.skyun.app.util.database.ibatis.vo.updateUserVo">
		SELECT PD.USER_NO AS UPDATE_USER_NO,
			U.USER_NAME AS UPDATE_USER_NM,
			G.TEAM_NAME AS SOSOK,
			PD.OKDATE AS REGDATE,
			U.USER_EMAIL AS EMAIL,
			DATE_FORMAT(PD.REGDATE, '%Y년 %m월 %d일') AS REQUEST_DATE,
			PD.APPROVAL_STATUS
		FROM pi_data_processing_charge_group PD, pi_user U, pi_group G
		WHERE 1 = 1
		  AND PD.USER_NO = U.USER_NO
		  AND U.INSA_CODE = G.INSA_CODE
		  AND U.USER_EMAIL IS NOT NULL
		  AND PD.APPROVAL_STATUS IN ('E', 'D')
		  AND DATE_FORMAT(PD.OKDATE, '%Y-%m-%d %H:%i:%s') >= DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY), '%Y-%m-%d %H:%i:%s')
		GROUP BY PD.USER_NO
	</select>

	<!-- 담당자 변경 -->
	<select id="getEmailMaster2" resultClass="com.skyun.app.util.database.ibatis.vo.updateUserVo">
		SELECT 
			TUL.NAME,
			TUL.UPDATE_USER_NO,
			TUL.UPDATE_USER_NM,
			U.USER_EMAIL AS EMAIL,
			IFNULL((SELECT G.TEAM_NAME FROM PI_GROUP G WHERE U.INSA_CODE = G.INSA_CODE),'') AS SOSOK,
			DATE_FORMAT(TUL.REGDATE, '%Y년 %m월 %d일') AS REGDATE,
			IFNULL(TU.SERVICE_NM, '없음') AS SERVICE_NM
		FROM pi_target_user_log TUL, pi_user U, pi_target_user TU
		WHERE DATE_FORMAT(TUL.REGDATE, '%Y-%m-%d %H:%i:%s') >= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 DAY), '%Y-%m-%d %H:%i:%s')
			AND TUL.TARGET_ID = TU.TARGET_ID
		   AND TUL.UPDATE_USER_NO = U.USER_NO
		   AND U.USER_EMAIL IS NOT NULL
		GROUP BY TUL.UPDATE_USER_NO
		ORDER BY TUL.UPDATE_USER_NO, TUL.TARGET_ID
	</select>


	<!-- 검출 결과 -->
	<select id="getEmailMaster3" resultClass="com.skyun.app.util.database.ibatis.vo.updateUserVo">
		<!-- SELECT TU.USER_NO AS UPDATE_USER_NO, 
			U.USER_NAME AS UPDATE_USER_NM, 
			U.USER_EMAIL AS EMAIL,
			(SELECT G.TEAM_NAME FROM PI_GROUP G WHERE U.INSA_CODE = G.INSA_CODE) AS SOSOK,
			DATE_FORMAT(F.REGDATE, '%Y-%m-%d') AS REGDATE
		FROM pi_find F, pi_target_user TU, pi_user U
		WHERE 1 = 1
		  AND DATE_FORMAT(F.REGDATE, '%Y-%m-%d 00:00:00') >= DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY), '%Y-%m-%d 00:00:00')
		  AND F.TARGET_ID = TU.TARGET_ID
		  AND F.AP_NO = TU.AP_NO
		  AND U.USER_EMAIL IS NOT NULL
		  AND TU.USER_NO = U.USER_NO
		  AND TU.USER_NO != ''
		  AND F.AP_NO = 0
		GROUP BY TU.USER_NO -->
		
		SELECT TU.USER_NO AS UPDATE_USER_NO, 
			U.USER_NAME AS UPDATE_USER_NM, 
			TU.TARGET_ID,
			TU.AP_NO,
			TU.SERVICE_NM,
			U.USER_EMAIL AS EMAIL,
			G.TEAM_NAME AS SOSOK,
			DATE_FORMAT(FROM_UNIXTIME(SL.UPDATED), '%Y-%m-%d') AS REGDATE,
			DATE_FORMAT(DATE_ADD(NOW(),INTERVAL 9 DAY), '%Y년 %m월 %d일') AS ACTION_DATE
		FROM pi_scheduled_location SL, pi_target_user TU, pi_user U, pi_group G
		WHERE SL.TARGET_ID = TU.TARGET_ID
			AND SL.AP_NO = TU.AP_NO
			AND SL.AP_NO = 0
			AND U.USER_EMAIL IS NOT NULL
			AND TU.USER_NO = U.USER_NO
			AND U.INSA_CODE = G.INSA_CODE
			AND DATE_FORMAT(FROM_UNIXTIME(SL.UPDATED), '%Y-%m-%d %H:%i:%s') >= DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY), '%Y-%m-%d %H:%i:%s')
		GROUP BY TU.TARGET_ID
	</select>


	<select id="getEmailDetail1" parameterClass="com.skyun.app.util.database.ibatis.vo.updateUserVo" resultClass="com.skyun.app.util.database.ibatis.vo.eDetail1Vo">
		SELECT PD.DATA_PROCESSING_CHARGE_NAME AS DOC_NAME,
	 		PD.APPROVAL_STATUS,
	 		PD.OK_USER_NO,
	 		U.USER_NAME,
	 		G.TEAM_NAME
		FROM pi_data_processing_charge_group PD, pi_user U, pi_group G
		WHERE 1 = 1
		  AND PD.OK_USER_NO = U.USER_NO
		  AND U.INSA_CODE = G.INSA_CODE
		  AND PD.USER_NO = #UPDATE_USER_NO#
		  AND PD.APPROVAL_STATUS IN ('E', 'D')
		  AND DATE_FORMAT(PD.OKDATE, '%Y-%m-%d %H:%i:%s') > DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -5 MINUTE), '%Y-%m-%d %H:%i:%s')
		ORDER BY PD.DATA_PROCESSING_CHARGE_NAME
	</select>

	<select id="getEmailDetail2" parameterClass="com.skyun.app.util.database.ibatis.vo.updateUserVo" resultClass="com.skyun.app.util.database.ibatis.vo.eDetail2Vo">
		SELECT TUL.TARGET_ID,
			TUL.AP_NO,
			TUL.TYPE,
			TUL.NAME,
			TUL.UPDATE_USER_NO,
			TUL.UPDATE_USER_NM,
			(SELECT U.USER_EMAIL FROM pi_user U WHERE TUL.UPDATE_USER_NO = U.USER_NO) AS MAIL,
			TUL.REGDATE,
			TU.SERVICE_NM
		FROM pi_target_user_log TUL, pi_target_user TU
		WHERE DATE_FORMAT(TUL.REGDATE, '%Y-%m-%d 00:00:00') = DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 DAY), '%Y-%m-%d 00:00:00')
			AND TUL.TARGET_ID = TU.TARGET_ID
		   AND TUL.UPDATE_USER_NO = #UPDATE_USER_NO#
		GROUP BY TUL.TARGET_ID, TUL.AP_NO, TUL.TYPE
		ORDER BY TUL.TARGET_ID, TUL.TYPE
	</select>

	<select id="getEmailDetail3" parameterClass="com.skyun.app.util.database.ibatis.vo.updateUserVo" resultClass="com.skyun.app.util.database.ibatis.vo.eDetail3Vo">
		<!-- SELECT DAT.TARGET_ID, 
			DAT.AP_NO, T.NAME, 
			COUNT(DAT.TARGET_ID) AS PATH_CNT, 
			DAT.USER_NO AS RECEIVER,
			SUM(DAT.TYPE1 + DAT.TYPE2 + DAT.TYPE3 + DAT.TYPE4 + DAT.TYPE5 + DAT.TYPE6 + DAT.TYPE7 + DAT.TYPE8) AS TOTAL
		FROM (
			SELECT F.HASH_ID, 
			   F.TARGET_ID, 
			   F.AP_NO, 
			   TU.USER_NO, 
			   SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE1,
				SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE2,
				SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE3, 
				SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE4,
				SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE5,
				SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'VISA') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
				SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MAESTRO') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
				SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'PRIVATE LABEL CARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
				SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DINERS CLUB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
				SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'JCB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
				SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'LASER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
				SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'CHINA UNION PAY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
			  	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DISCOVER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
				SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'TROY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
				SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MASTERCARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
				SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'AMERICAN EXPRESS') > 0 THEN S.MATCH_COUNT ELSE 0 END) AS TYPE6,
				SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'EMAIL') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE7,
				SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END)	AS TYPE8
			FROM pi_find F, pi_target_user TU, pi_summary S
			WHERE 1 = 1
			  AND DATE_FORMAT(F.REGDATE, '%Y-%m-%d 00:00:00') = DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY), '%Y-%m-%d 00:00:00')
			  AND F.TARGET_ID = TU.TARGET_ID
			  AND F.AP_NO = TU.AP_NO
			  AND TU.USER_NO = #UPDATE_USER_NO#
			  AND F.TARGET_ID = S.TARGET_ID
			  AND F.HASH_ID = S.OBJECT_ID
			  AND F.AP_NO = S.AP_NO
			  AND F.AP_NO = 0
			GROUP BY F.HASH_ID, F.TARGET_ID, F.AP_NO
		) DAT, pi_targets T
		WHERE DAT.TARGET_ID = T.TARGET_ID
		  AND DAT.AP_NO = T.AP_NO
		GROUP BY DAT.TARGET_ID, DAT.AP_NO -->
		
		<!-- SELECT DAT.TARGET_ID, 
			DAT.AP_NO, T.NAME, 
			FORMAT(COUNT(DAT.TARGET_ID) , 0) AS PATH_CNT, 
			DAT.USER_NO AS RECEIVER,
			FORMAT(SUM(DAT.FILE) , 0) AS FILE,
			DAT.SERVICE_NM
		FROM (
			SELECT F.HASH_ID, 
			   F.TARGET_ID, 
			   F.AP_NO, 
			   TU.USER_NO,
			   S.MATCH_COUNT AS FILE,
			   TU.SERVICE_NM
			FROM pi_find F, pi_target_user TU, pi_summary S
			WHERE 1 = 1
			  AND DATE_FORMAT(F.REGDATE, '%Y-%m-%d 00:00:00') >= DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY), '%Y-%m-%d 00:00:00')
			  AND F.TARGET_ID = TU.TARGET_ID
			  AND F.HASH_ID = S.OBJECT_ID
			  AND F.AP_NO = S.AP_NO
			  AND F.TARGET_ID = S.TARGET_ID
			  AND F.AP_NO = TU.AP_NO
			  AND F.AP_NO = 0
			  AND TU.USER_NO = #UPDATE_USER_NO#
			GROUP BY F.HASH_ID, F.TARGET_ID, F.AP_NO
		) DAT, pi_targets T
		WHERE DAT.TARGET_ID = T.TARGET_ID
		  AND DAT.AP_NO = T.AP_NO
		GROUP BY DAT.TARGET_ID, DAT.AP_NO -->
		
		SELECT 
			TARGET_ID, 
			AP_NO,
			(SELECT NAME FROM PI_TARGETS WHERE TARGET_ID = DATA.TARGET_ID LIMIT 1) AS NAME, 
			REGDATE, 
			IFNULL(COUNT(DATA.PATH), 0)AS PATH_CNT,
			IFNULL(SUM(DRIVER+FOREIGNER+PASSPORT+RRN+ACCOUNT_NUM+CARD_NUM+MOBILE_PHONE+EMAIL), 0) AS FILE,
			SERVICE_NM
		FROM (SELECT
		T.TARGET_ID as TARGET_ID,
		T.AP_NO,
		T.NAME,
		F.PATH,
		MAX(DATE_FORMAT(F.REGDATE, '%Y.%m/%d' )) AS REGDATE,
		TU.SERVICE_NM,
		IF(SP.ENABLE = 1,
         CASE WHEN 
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.RRN_CNT 
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0 THEN S.MATCH_COUNT ELSE 0 END))  AS RRN, 
	    IF(SP.ENABLE = 1,
         CASE WHEN
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.FOREIGNER_CNT 
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END))  AS FOREIGNER, 
	    IF(SP.ENABLE = 1,
         CASE WHEN
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.PASSPORT_CNT 
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0 THEN S.MATCH_COUNT ELSE 0 END))  AS PASSPORT, 
        IF(SP.ENABLE = 1,
		 CASE WHEN
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.DRIVER_CNT
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END))  AS DRIVER, 
        IF(SP.ENABLE = 1,
 		 CASE WHEN
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.ACCOUNT_CNT 
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END))  AS ACCOUNT_NUM, 
	 	 IF(SP.ENABLE = 1,
		  CASE WHEN 
			SUM(CASE WHEN UPPER(S.DATA_TYPE) IN ('VISA', 'MAESTRO', 'PRIVATE LABEL CARD', 'DINERS CLUB', 'JCB', 'LASER', 'MASTERCARD', 'CHINA UNION PAY', 'DISCOVER', 'TROY', 'AMERICAN EXPRESS')
			THEN S.MATCH_COUNT ELSE 0 END) > DU.CARD_CNT 
			THEN SUM(CASE WHEN UPPER(S.DATA_TYPE) IN ('VISA', 'MAESTRO', 'PRIVATE LABEL CARD', 'DINERS CLUB', 'JCB', 'LASER', 'MASTERCARD', 'CHINA UNION PAY', 'DISCOVER', 'TROY', 'AMERICAN EXPRESS')
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END,
			(SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'VISA') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MAESTRO') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'PRIVATE LABEL CARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DINERS CLUB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'JCB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
         	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'LASER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MASTERCARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'CHINA UNION PAY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DISCOVER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'TROY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          	SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'AMERICAN EXPRESS') > 0 THEN S.MATCH_COUNT ELSE 0 END) ))  AS CARD_NUM, 
         IF(SP.ENABLE = 1,
		  CASE WHEN
		   SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'EMAIL') > 0
		   THEN S.MATCH_COUNT ELSE 0 END) > DU.EMAIL_CNT
		   THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'EMAIL') > 0
		   THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'EMAIL') > 0 THEN S.MATCH_COUNT ELSE 0 END))  AS EMAIL, 
	 	  IF(SP.ENABLE = 1,
	 	  CASE WHEN
		   SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0
		   THEN S.MATCH_COUNT ELSE 0 END) > DU.MOBILE_PHONE_CNT
		   THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0
		   THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END,
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END))  AS MOBILE_PHONE,

	  	 IF(SP.ENABLE = 1,
         (
         CASE WHEN 
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.RRN_CNT 
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END +
         CASE WHEN
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.FOREIGNER_CNT 
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END +
         CASE WHEN
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.PASSPORT_CNT 
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END +
         CASE WHEN
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.DRIVER_CNT
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END +
         CASE WHEN
			SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) > DU.ACCOUNT_CNT 
			THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END +
	  	 CASE WHEN 
			SUM(CASE WHEN UPPER(S.DATA_TYPE) IN ('VISA', 'MAESTRO', 'PRIVATE LABEL CARD', 'DINERS CLUB', 'JCB', 'LASER', 'MASTERCARD', 'CHINA UNION PAY', 'DISCOVER', 'TROY', 'AMERICAN EXPRESS')
			THEN S.MATCH_COUNT ELSE 0 END) > DU.CARD_CNT 
			THEN SUM(CASE WHEN UPPER(S.DATA_TYPE) IN ('VISA', 'MAESTRO', 'PRIVATE LABEL CARD', 'DINERS CLUB', 'JCB', 'LASER', 'MASTERCARD', 'CHINA UNION PAY', 'DISCOVER', 'TROY', 'AMERICAN EXPRESS')
			THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END +
         CASE WHEN
		   SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'EMAIL') > 0
		   THEN S.MATCH_COUNT ELSE 0 END) > DU.EMAIL_CNT
		   THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'EMAIL') > 0
		   THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END +
	     CASE WHEN
		   SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0
		   THEN S.MATCH_COUNT ELSE 0 END) > DU.MOBILE_PHONE_CNT
		   THEN SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0
		   THEN S.MATCH_COUNT ELSE 0 END) ELSE 0 END
         ),
	    ( SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN DRIVER LICENSE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END) + 
          SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN FOREIGNER NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END) + 
          SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN PASSPORT') > 0 THEN S.MATCH_COUNT ELSE 0 END) + 
          SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN RRN') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
          SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'ACCOUNT NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END) + 
          (SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'VISA') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MAESTRO') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'PRIVATE LABEL CARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DINERS CLUB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'JCB') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'LASER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'MASTERCARD') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'CHINA UNION PAY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'DISCOVER') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'TROY') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'AMERICAN EXPRESS') > 0 THEN S.MATCH_COUNT ELSE 0 END) + 
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'EMAIL') > 0 THEN S.MATCH_COUNT ELSE 0 END) +
           SUM(CASE WHEN INSTR(UPPER(S.DATA_TYPE), 'SOUTH KOREAN MOBILE PHONE NUMBER') > 0 THEN S.MATCH_COUNT ELSE 0 END) ) )	
		 ) AS TOTAL,
		 MAX_STS.POLICY_ID,
		 IFNULL(SP.ENABLE, 2) AS ENABLE,
		 IFNULL(SP.POLICY_NAME,'') AS POLICY_NM,
		 SD.SCHEDULE_DATATYPE_PROFILES AS DATATYPE_ID,
		 DU.rrn				AS RRN_CHK,
		 DU.rrn_cnt			AS RRN_CNT,
		 DU.rrn_dup			AS RRN_DUP,
		 DU.foreigner			AS FOREIGNER_CHK,
		 DU.foreigner_cnt		AS FOREIGNER_CNT,
		 DU.foreigner_dup		AS FOREIGNER_DUP,
		 DU.driver				AS DRIVER_CHK,
		 DU.driver_cnt			AS DRIVER_CNT,
		 DU.driver_dup			AS DRIVER_DUP,
		 DU.passport			AS PASSPORT_CHK,
		 DU.passport_cnt		AS PASSPORT_CNT,
		 DU.passport_dup		AS PASSPORT_DUP,
		 DU.account			AS ACCOUNT_CHK,
		 DU.account_cnt		AS ACCOUNT_CNT,
		 DU.account_dup		AS ACCOUNT_DUP,
		 DU.card				AS CARD_CHK,
		 DU.card_cnt			AS CARD_CNT,
		 DU.card_dup			AS CARD_DUP,
		 DU.mobile_phone		AS MOBILE_PHONE_CHK,
		 DU.mobile_phone_cnt	AS MOBILE_PHONE_CNT,
		 DU.mobile_phone_dup	AS MOBILE_PHONE_DUP,
		 DU.email				AS EMAIL_CHK,
		 DU.email_cnt			AS EMAIL_CNT,
		 DU.email_dup			AS EMAIL_DUP,
		 DU.recent AS RECENT
		 FROM pi_targets T
	 			LEFT OUTER JOIN 
 					(SELECT ST.TARGET_ID, ST.AP_NO, ST.LOCATION_ID, ST.RECON_SCHEDULE_ID,ST.REGDATE, ST.POLICY_ID, ST.CONFIRM FROM pi_schedule_targets ST,
					    (SELECT STS.TARGET_ID, STS.AP_NO ,MAX(STS.REGDATE) AS REGDATE FROM pi_schedule_targets STS GROUP BY STS.TARGET_ID, STS.AP_NO) STS
					    WHERE STS.TARGET_ID = ST.TARGET_ID
					      AND STS.AP_NO = ST.AP_NO
					      AND STS.REGDATE = ST.REGDATE
					) AS MAX_STS ON T.TARGET_ID = MAX_STS.TARGET_ID AND T.AP_NO = MAX_STS.AP_NO
				LEFT OUTER JOIN pi_scan_policy SP ON MAX_STS.POLICY_ID = SP.IDX 
				LEFT OUTER JOIN pi_schedules SD ON MAX_STS.AP_NO = SD.AP_NO AND MAX_STS.RECON_SCHEDULE_ID = SD.SCHEDULE_ID
				LEFT OUTER JOIN pi_datatypes_user DU ON SP.STD_ID = DU.STD_ID AND T.AP_NO = DU.AP_NO
				, pi_Summary S, pi_find F, pi_target_user TU
		 WHERE 1 = 1
		  AND F.TARGET_ID = #target_id#
		  AND F.AP_NO = #ap_no#
		  AND T.TARGET_ID = F.TARGET_ID
		  AND T.TARGET_ID = TU.TARGET_ID
		  AND F.HASH_ID = S.OBJECT_ID
		  AND F.TARGET_ID = S.TARGET_ID
		  AND T.AP_NO = S.AP_NO
		  AND T.AP_NO = F.AP_NO
		  AND T.AP_NO = TU.AP_NO
		  AND F.DELDATE IS NULL
		 GROUP BY F.HASH_ID, F.TARGET_ID, F.AP_NO) DATA
		 WHERE 1=1
		 AND ((DATA.RRN > IFNULL(DATA.RRN_CNT, 0) AND IFNULL(DATA.RRN_CHK, 1) > 0)
		  OR (DATA.FOREIGNER > IFNULL(DATA.FOREIGNER_CNT, 0) AND IFNULL(DATA.FOREIGNER_CHK, 1) > 0)
		  OR (DATA.PASSPORT > IFNULL(DATA.PASSPORT_CNT, 0) AND IFNULL(DATA.PASSPORT_CHK, 1) > 0)
		  OR (DATA.DRIVER > IFNULL(DATA.DRIVER_CNT, 0) AND IFNULL(DATA.DRIVER_CHK, 1) > 0)
		  OR (DATA.ACCOUNT_NUM > IFNULL(DATA.ACCOUNT_CNT, 0) AND IFNULL(DATA.ACCOUNT_CHK, 1) > 0)
		  OR (DATA.CARD_NUM > IFNULL(DATA.CARD_CNT, 0) AND IFNULL(DATA.CARD_CHK, 1) > 0)
		  OR (DATA.EMAIL > IFNULL(DATA.EMAIL_CNT, 0) AND IFNULL(DATA.EMAIL_CHK, 1) > 0)
		  OR (DATA.MOBILE_PHONE > IFNULL(DATA.MOBILE_PHONE_CNT, 0) AND IFNULL(DATA.MOBILE_PHONE_CHK, 1) > 0))
	</select>

</sqlMap>
